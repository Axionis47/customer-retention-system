[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "churn-saver-rlhf-ppo"
version = "0.1.0"
description = "Production-grade churn retention with PPO decision policy and RLHF message generation"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Churn Saver Team", email = "team@example.com"}
]

dependencies = [
    "torch>=2.1.0",
    "transformers>=4.36.0",
    "trl>=0.7.0",
    "peft>=0.7.0",
    "bitsandbytes>=0.41.0",
    "gymnasium>=0.29.0",
    "scikit-learn>=1.3.0",
    "xgboost>=2.0.0",
    "fastapi>=0.108.0",
    "uvicorn[standard]>=0.25.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "numpy>=1.24.0,<2.0.0",
    "pandas>=2.1.0",
    "pyyaml>=6.0",
    "requests>=2.31.0",
    "gcsfs>=2023.12.0",
    "google-cloud-storage>=2.14.0",
    "google-cloud-secret-manager>=2.17.0",
    "accelerate>=0.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
    "pytest-asyncio>=0.21.0",
    "pytest-benchmark>=4.0.0",
    "pytest-rerunfailures>=12.0",
    "hypothesis>=6.92.0",
    "freezegun>=1.4.0",
    "mypy>=1.8.0",
    "ruff>=0.1.9",
    "black>=23.12.0",
    "pre-commit>=3.6.0",
    "types-requests>=2.31.0",
    "types-PyYAML>=6.0.0",
    "httpx>=0.25.0",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["env*", "models*", "agents*", "rlhf*", "eval*", "serve*", "ops*"]
exclude = ["tests*"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov-report=term-missing:skip-covered",
    "--cov-branch",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "contract: Contract tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["env", "agents", "serve", "models", "rlhf", "eval"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

